name: Compile

on:
  push:
    branches: [ "appimage" ]

jobs:
  windows:
    name: Windows (MSYS2)

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
    - name: Fetch Dependencies
      run: pacman -S --noconfirm unzip make git mingw-w64-i686-gcc mingw-w64-x86_64-gcc mingw-w64-i686-glew mingw-w64-x86_64-glew mingw-w64-i686-SDL2 mingw-w64-i686-SDL mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL python3 mingw-w64-x86_64-curl mingw-w64-x86_64-jsoncpp
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: D:\a\Saturn\Saturn\build\us_pc\

  linux:
    name: Linux
    runs-on: ubuntu-latest
    container: fedora:39
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Fetch Dependencies
      run: sudo dnf install make gcc python3 glew-devel SDL2-devel curl libcurl-devel jsoncpp-devel gtk4-devel
    - name: Install LinuxDeploy
      uses: miurahr/install-linuxdeploy-action@v1.7.0
      with:
        plugins: appimage
    - name: Build AppImage
      run: |
        FILE_PICKER=1 DISCORDGAMESDK=0 DISCORDRPC=0 DISCORD_SDK=0 make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
        mkdir AppDir
        cp -r build/us_pc/* AppDir/
        linuxdeploy --appdir AppDir --output Saturn.AppImage
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: 'Saturn.AppImage'