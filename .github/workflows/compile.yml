name: Compile

on:
  push:
    branches: [ "appimage" ]

jobs:
  windows:
    name: Windows (MSYS2)

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
    - name: Fetch Dependencies
      run: pacman -S --noconfirm unzip make git mingw-w64-i686-gcc mingw-w64-x86_64-gcc mingw-w64-i686-glew mingw-w64-x86_64-glew mingw-w64-i686-SDL2 mingw-w64-i686-SDL mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL python3 mingw-w64-x86_64-curl mingw-w64-x86_64-jsoncpp
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: D:\a\Saturn\Saturn\build\us_pc\

  linux:
    name: Linux

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Fetch Dependencies
      run: sudo apt install -y build-essential git python3 libglew-dev libsdl2-dev curl libcurl4-gnutls-dev libjsoncpp-dev
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: /home/runner/work/Saturn/Saturn/build/us_pc

  linux-appimage:
    name: Linux (AppImage) (glibc 2.37) (x86_64)
    runs-on: ubuntu-latest
    container: fedora:38
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Fetch Dependencies from Fedora
      run: |
        sudo dnf install -y wget make git gcc g++ python3 glew-devel SDL2-devel curl libcurl-devel jsoncpp-devel gtk4-devel
    - name: Install linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        ./linuxdeploy-x86_64.AppImage --appimage-extract
    - name: Build Saturn
      run: FILE_PICKER=1 DISCORDGAMESDK=0 DISCORDRPC=0 DISCORD_SDK=0 make -j$(nproc)
    - name: Install Saturn to AppDir
      run: |
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
        mkdir -p AppDir/usr/bin
        cp -r build/us_pc/* AppDir/usr/bin/
    - name: Install additional necessary libraries to AppDir
      run: cp /usr/lib64/libthai* AppDir/usr/lib64/
    - name: Generate AppImage
      run: NO_STRIP=true squashfs-root/AppRun --icon-file platform/appimage/Saturn.png --desktop-file platform/appimage/Saturn.desktop --appdir AppDir --output appimage
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: 'Saturn-x86_64.AppImage'