name: Compile

on:
  push:
    branches: [ "appimage" ]

jobs:
  windows:
    name: Windows (MSYS2)

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
    - name: Fetch Dependencies
      run: pacman -S --noconfirm unzip make git mingw-w64-i686-gcc mingw-w64-x86_64-gcc mingw-w64-i686-glew mingw-w64-x86_64-glew mingw-w64-i686-SDL2 mingw-w64-i686-SDL mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL python3 mingw-w64-x86_64-curl mingw-w64-x86_64-jsoncpp
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: D:\a\Saturn\Saturn\build\us_pc\

  linux:
    name: Linux

    runs-on: ubuntu-jammy

    steps:
    - uses: actions/checkout@v3
    - name: Fetch Dependencies
      run: sudo apt install -y build-essential git python3 libglew-dev libsdl2-dev curl libcurl4-gnutls-dev libjsoncpp-dev libgtk-4-dev
    - name: Build
      run: |
        FILE_DIALOG=1 make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
        mkdir AppDir
        cp -r build/us_pc/* AppDir/
    - name: Build AppImage
      uses: AppImageCrafters/build-appimage-action@master
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: saturn-${{ github.run_number }}-${{ github.job }}
        path: './*.AppImage*'